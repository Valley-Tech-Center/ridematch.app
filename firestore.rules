rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Rules for the 'events' collection
    match /events/{eventId} {
      allow get: if true;
      allow list: if true;
      // allow write: if request.auth != null;
    }

    // --- Rules for the top-level 'attendance' collection ---
    match /attendance/{attendanceId} {
      allow get: if request.auth != null && request.auth.uid == resource.data.userId;
      allow list: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update: if request.auth != null && request.auth.uid == resource.data.userId
                     && request.resource.data.userId == resource.data.userId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // --- Rules for the 'users' collection ---
    match /users/{userId} {
      allow get: if request.auth != null;
      allow list: if request.auth != null; 
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // --- Rules for the 'notifications' collection ---
    match /notifications/{notificationId} {
      // Allow authenticated users to create notifications if senderId matches their UID
      allow create: if request.auth != null && request.resource.data.senderId == request.auth.uid;

      // Allow recipient to read/get the notification 
      // (Could also allow sender: resource.data.senderId == request.auth.uid)
      allow get: if request.auth != null && resource.data.recipientId == request.auth.uid;
      
      // Allow recipient to list notifications where they are the recipient
      // Query must include where('recipientId', '==', request.auth.uid)
      allow list: if request.auth != null; 

      // Allow recipient to update the notification (e.g., mark as read, update status)
      // Ensure they don't change sender/recipient/event etc.
      allow update: if request.auth != null && resource.data.recipientId == request.auth.uid;
      
      // Optionally allow deletion (e.g., by recipient)
      // allow delete: if request.auth != null && resource.data.recipientId == request.auth.uid;
    }
  }
}